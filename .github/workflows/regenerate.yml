name: Regenerate Shopify Bypass Link

on:
  schedule:
    # Run every 55 minutes (since URLs expire in 1 hour)
    - cron: '*/55 * * * *'  # 26 runs/day = 104MB (small savings)
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: write

jobs:
  regenerate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit
      
      - name: Run regeneration script with proxy
        env:
          SHOPIFY_COOKIES: ${{ secrets.SHOPIFY_COOKIES }}
          DECODO_PROXY_USERNAME: ${{ secrets.DECODO_PROXY_USERNAME }}
          DECODO_PROXY_PASSWORD: ${{ secrets.DECODO_PROXY_PASSWORD }}
          CI: 'true'
          NODE_ENV: 'production'
        run: node regenerate-browserless.js
      
      - name: Commit and push if changed
        id: git-check
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add index.html
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            git commit -m "ðŸ”„ Auto-update bypass link [skip ci]"
            git push
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Purge Cloudflare Cache
        if: steps.git-check.outputs.changed == 'true'
        env:
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          echo "Purging Cloudflare cache..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"files":["https://magazin.trilogyoptic.com/","https://magazin.trilogyoptic.com/index.html"]}'